apiVersion: apps/v1
kind: Deployment
metadata:
  name: faultservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: faultservice
  template:
    metadata:
      labels:
        app: faultservice
    spec:
      terminationGracePeriodSeconds: 5
      containers:
        - name: server
          image: faultservice
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
          readinessProbe:
            periodSeconds: 5
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:8080"]
          livenessProbe:
            periodSeconds: 5
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:8080"]
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: faultservice
spec:
  type: ClusterIP
  selector:
    app: faultservice
  ports:
    - name: grpc
      port: 5000
      targetPort: 8080
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: faultservice-role
  namespace: default
rules:
  - apiGroups: ["", "networking.istio.io"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: faultservice
subjects:
  - kind: ServiceAccount
    # Reference to upper's `metadata.name`
    name: default
    # Reference to upper's `metadata.namespace`
    namespace: default
roleRef:
  kind: ClusterRole
  name: faultservice-role
  apiGroup: rbac.authorization.k8s.io